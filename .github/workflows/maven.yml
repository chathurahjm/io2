# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Java CI with Maven


on:
  schedule:
    - cron:  '0 */6 * * *'  
    
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: macos-13

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven


    - name: Install VPN
      run: | 
             brew install openvpn
             cd src
             cd data
             ls
             pwd

             sudo chmod -R 777 /usr/local/opt/openvpn/sbin/openvpn
             # sudo sed -i 's/auth-user-pass/auth-user-pass credentials/g' data.ovpn
              sed -i '' 's/auth-user-pass/auth-user-pass credentials/g' data.ovpn
             sudo nohup openvpn data.ovpn &
             curl ifconfig.me


      # Start Xvfb
    - name: Start Xvfb
      run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
      

  #  - name: Check Chrome Version
   #   run: google-chrome --version


  #  - name: Verify installation
   #   run: chromedriver --version
    
    # - name: Build with Maven
    #   run: mvn clean install -B

    - name: test with Maven
      id: mvncmd
      run: mvn -B clean test --fail-at-end


    # - name: Commit and Push Changes
    #   if: always()      
    #   run: |
    #         sudo git config --global user.email "actions@github.com"
    #         sudo git config --global user.name "GitHub Actions"
    #         //git update-index --chmod=+x /home/runner/work/gitActionWindows/gitActionWindows/screenshots/
    #         sudo git add /home/runner/work/gitActionWindows/gitActionWindows/screenshots/
    #         sudo git commit -m "Automatically updated GitHub Actions workflow"
    #         sudo git push
    #         # Display output
    # - run: echo "Changes committed and pushed successfully"

    - name: Archive Jacoco reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: jacoco-reports
        path: /Users/runner/work/io2/io2/screenshots/

